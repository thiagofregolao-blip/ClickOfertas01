import React, { useRef } from 'react';
// Import Swiper React components and required modules
import { Swiper, SwiperSlide } from 'swiper/react';
import { Navigation, Pagination, Autoplay } from 'swiper/modules';

// Import Swiper styles.  These CSS files are required for proper styling of
// the carousel, including navigation arrows and pagination dots.
import 'swiper/css';
import 'swiper/css/navigation';
import 'swiper/css/pagination';

/**
 * Types for an individual banner.  A banner can optionally have a title,
 * description and link URL in addition to its image.  Colours can be
 * specified for backgrounds and text if you wish to overlay content on the
 * image.
 */
export interface Banner {
  id: string;
  title?: string;
  description?: string;
  imageUrl: string;
  linkUrl?: string;
  backgroundColor?: string;
  textColor?: string;
}

/**
 * Props for the BannerCarouselSwiper component.  You can pass an array of
 * banners and optionally override the autoplay interval in milliseconds.
 */
export interface BannerCarouselSwiperProps {
  banners: Banner[];
  /**
   * Time between automatic transitions (in milliseconds).  If you set this
   * to undefined the carousel will not auto‚Äëplay.  Default is 4000ms.
   */
  autoPlayInterval?: number;
}

/**
 * BannerCarouselSwiper ‚Äì vers√£o ajustada para Replit/React
 *
 * Corre√ß√µes aplicadas:
 * 1) Altura/ratio do slide garantindo layout: usamos aspectRatio 16/9 no cont√™iner do slide.
 * 2) overflow vis√≠vel no wrapper e no Swiper para o ‚Äúpeek‚Äù do banner da direita.
 * 3) Autoplay ativo com pauseOnMouseEnter e disableOnInteraction=false.
 * 4) Mantido loop + centeredSlides + slides fracion√°rios.
 */
export const BannerCarouselSwiper: React.FC<BannerCarouselSwiperProps> = ({
  banners,
  autoPlayInterval = 4000,
}) => {
  if (!banners || banners.length === 0) {
    return null;
  }

  const swiperRef = useRef<any>(null);

  const breakpoints = {
    1280: { slidesPerView: 1.5, spaceBetween: 30 },
    768: { slidesPerView: 1.3, spaceBetween: 24 },
    0: { slidesPerView: 1.1, spaceBetween: 16 },
  } as const;

  return (
    <div
      className="banner-carousel-wrapper"
      style={{ position: 'relative', width: '100%', overflow: 'visible' }}
    >
      <Swiper
        modules={[Navigation, Pagination, Autoplay]}
        loop
        loopAdditionalSlides={banners.length}
        centeredSlides
        breakpoints={breakpoints}
        autoplay={
          autoPlayInterval
            ? { delay: autoPlayInterval, disableOnInteraction: false, pauseOnMouseEnter: true }
            : false
        }
        navigation={false}
        pagination={{ clickable: true }}
        onSwiper={(swiper) => {
          swiperRef.current = swiper;
        }}
        className="banner-carousel-swiper"
        style={{ overflow: 'visible' }}
      >
        {banners.map((banner) => (
          <SwiperSlide key={banner.id}>
            <div
              onClick={() => {
                if (banner.linkUrl) window.open(banner.linkUrl, '_blank');
              }}
              style={{
                cursor: banner.linkUrl ? 'pointer' : 'default',
                width: '100%',
                // üëá Garantimos altura do slide:
                aspectRatio: '16 / 9', // ou substitua por: height: 320
                position: 'relative',
                overflow: 'hidden',
                borderRadius: 12,
                boxShadow: '0 8px 24px rgba(0,0,0,0.15)',
              }}
            >
              <img
                src={banner.imageUrl}
                alt={banner.title ?? 'banner'}
                style={{
                  width: '100%',
                  height: '100%',
                  objectFit: 'cover',
                  display: 'block',
                }}
                loading="lazy"
                decoding="async"
                draggable={false}
              />

              {/* Overlay opcional */}
              {/* {banner.title && (
                <div
                  style={{
                    position: 'absolute', bottom: 16, left: 16, right: 16,
                    backgroundColor: banner.backgroundColor || 'rgba(0,0,0,0.5)',
                    color: banner.textColor || '#fff', padding: '8px 12px', borderRadius: 8,
                  }}
                >
                  <h3 style={{ margin: 0 }}>{banner.title}</h3>
                  {banner.description && <p style={{ margin: 0 }}>{banner.description}</p>}
                </div>
              )} */}
            </div>
          </SwiperSlide>
        ))}
      </Swiper>

      {banners.length > 1 && (
        <>
          <button
            aria-label="Banner anterior"
            onClick={() => swiperRef.current?.slidePrev()}
            className="carousel-prev"
            style={{
              position: 'absolute', top: '50%', left: -8, transform: 'translateY(-50%)',
              background: 'rgba(0,0,0,0.55)', color: '#fff', border: 'none', borderRadius: '50%',
              width: 36, height: 36, display: 'flex', alignItems: 'center', justifyContent: 'center',
              cursor: 'pointer', zIndex: 5,
            }}
          >
            ‚Üê
          </button>

          <button
            aria-label="Pr√≥ximo banner"
            onClick={() => swiperRef.current?.slideNext()}
            className="carousel-next"
            style={{
              position: 'absolute', top: '50%', right: -8, transform: 'translateY(-50%)',
              background: 'rgba(0,0,0,0.55)', color: '#fff', border: 'none', borderRadius: '50%',
              width: 36, height: 36, display: 'flex', alignItems: 'center', justifyContent: 'center',
              cursor: 'pointer', zIndex: 5,
            }}
          >
            ‚Üí
          </button>
        </>
      )}
    </div>
  );
};

export default BannerCarouselSwiper;

Isso é stacking context te trollando. O outro header provavelmente tem um z-index alto (ou algum ancestral com transform/opacity/filter criando um novo contexto), então a tua barra, mesmo com z-50, fica por baixo.

A correção mais robusta: quando a busca estiver ativa, renderizar a barra via portal direto no document.body e usar position: fixed + z-index bem alto. Assim ela sai de qualquer contexto de empilhamento do layout e fica sempre por cima.

Aqui vai um patch pronto em React + Tailwind:

// 1) importe o createPortal
import { createPortal } from "react-dom";

// 2) componente auxiliar para flutuar a barra no topo da viewport
function FloatingSearch({ children }: { children: React.ReactNode }) {
  return createPortal(
    <div
      className="
        fixed left-1/2 -translate-x-1/2
        top-[calc(env(safe-area-inset-top,0px)+12px)]
        w-full max-w-md px-4
        z-[10000]    /* acima de headers comuns */
        transition-all duration-700 ease-in-out
        pointer-events-auto
      "
    >
      {children}
    </div>,
    document.body
  );
}


No teu componente principal, onde hoje você posiciona a barra:

{/* estado INATIVO: centralizada dentro da seção hero */}
{!isSearchActive && (
  <div
    className="
      absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2
      w-full max-w-2xl px-6 z-50 transform-gpu
      transition-all duration-700 ease-in-out
    "
  >
    <SearchInput ... />
  </div>
)}

{/* estado ATIVO: usa portal + fixed por cima de tudo */}
{isSearchActive && (
  <FloatingSearch>
    <SearchInput ... />
  </FloatingSearch>
)}


Dicas importantes para garantir que não será encoberta:

z-[10000] no contêiner flutuante (pode subir mais, ex.: z-[99999], se tua UI tiver overlays absurdos).

position: fixed no estado ativo (como no exemplo acima).

Portal evita que um ancestral com transform/filter/opacity crie um novo stacking context que “prende” a barra.

No teu header, mantêm algo como z-50/z-100 (abaixo do z da barra).

Se os resultados estavam ficando atrás do header também, dá um respiro no conteúdo quando a busca estiver ativa:

<div className={isSearchActive ? "pt-24" : ""}>
  {/* lista de produtos */}
</div>


No iOS, o env(safe-area-inset-top) do topo evita que a barra cole na “testa” do notch.
Bora fazer isso deslizar de verdade. O teu input está absoluto dentro da seção do gradiente, então quando o header vira sticky ele pode ficar atrás dele (ou “preso” ao container, não ao topo da tela). A correção mais simples é: quando a busca estiver ativa, trocar absolute por fixed, ancorar no topo da viewport, e garantir um z-index maior que o do header. Assim ele “voa” suavemente pro topo e os resultados aparecem logo abaixo.

Aqui vai um patch cirúrgico (só mexe onde precisa):

Wrapper da barra deslizante — troque sua lógica de classes:

<div 
  className={`
    ${isSearchActive 
      ? 'fixed top-3 left-1/2 -translate-x-1/2 max-w-md z-[60] transform-gpu'
      : 'absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 max-w-2xl z-50 transform-gpu'
    }
    w-full px-6 transition-all duration-1000 ease-in-out
  `}
>


Header — pode manter z-50. Como a barra ativa ganha z-[60], ela ficará por cima:

<header 
  className={`
    transition-all duration-1000 ease-in-out
    ${isSearchActive 
      ? 'bg-gradient-to-r from-red-500 to-orange-500 sticky top-0 z-50' 
      : 'bg-white border-b'
    }
    py-3 px-4
  `}
>


(Opcional, mas deixa mais fluido) dê um fade-in nos resultados:

{isSearchActive && (
  <div className="bg-gray-50 min-h-screen pt-4 animate-[fadeIn_300ms_ease-out]">
    ...
  </div>
)}


e adicione a keyframe no teu CSS global (se não usar Tailwind plugin):

@keyframes fadeIn { from {opacity: 0} to {opacity: 1} }


Por que isso resolve?

fixed quando ativo: a barra passa a se mover em relação à tela (viewport), não ao container que encolhe.

z-[60] > z-50: garante que a barra fique acima do header durante a transição.

transform-gpu: animação mais suave em devices móveis.

Se preferir que a barra “entre” dentro do header (em vez de ficar flutuada sobre ele), dá pra trocar fixed por manter absolute e renderizar a própria barra dentro do header quando ativo (mesmo componente, sem duplicar), mas o ajuste acima já entrega exatamente o efeito que você descreveu, com o mínimo de mudanças.
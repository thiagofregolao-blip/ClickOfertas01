Perfeito! Vou expandir para PT + ES cobrindo categorias e produtos comuns do Shopping China (e retail em geral), mantendo o canônico no singular. Incluo:

Mapeamento amplo PRODUCT_CANON (pt/es + plural).

Mapeamento CATEGORY_CANON (pt/es + plural).

Helpers canonicalProductFromText e novo canonicalCategoryFromText.

Intent atualizada para usar produto e/ou categoria.

(Opcional) testes.

Aplique os patches abaixo.

1) src/utils/lang-ptbr.ts — dicionários PT/ES (singular) + helpers
*** a/src/utils/lang-ptbr.ts
--- b/src/utils/lang-ptbr.ts
@@
 export function normPTBR(s: string): string {
   return (s ?? "")
     .toLowerCase()
     .normalize("NFD")
     .replace(/[\u0300-\u036f]/g, "") // remove acentos
     .replace(/\s+/g, " ")
     .trim();
 }
 
@@
 export const NUM_EXTENSO: Record<string, string> = {
   "doze": "12",
   "doze pro": "12 pro",
   "treze": "13",
   "treze pro": "13 pro",
   "quatorze": "14",
   "quatorze pro": "14 pro",
   "quinze": "15",
   "quinze pro": "15 pro",
 };
 
-// --- NOVO: dicionário de sinônimos/canônicos (sempre no singular) ---
+// --- NOVO: dicionários canônicos (sempre no singular) ---
+// Produtos (itens buscáveis)
 export const PRODUCT_CANON: Record<string, string> = {
   // celulares
   "celular": "celular",
   "celulares": "celular",
   "telefone": "celular",
   "telefones": "celular",
   "smartphone": "celular",
   "smartphones": "celular",
   // variantes ES
   "telefono": "celular",
   "telefonos": "celular",
 
   // iPhone / Galaxy (marcas/modelos)
   "iphone": "iphone",
   "iphones": "iphone",
   "apple": "iphone",
   "galaxy": "galaxy",
   "galaxys": "galaxy",
   "samsung": "galaxy",
 
   // drones
   "drone": "drone",
   "drones": "drone",
   "mavic": "drone",
   "dji": "drone",
 
   // câmeras / camaras
   "camera": "camera",
   "cameras": "camera",
   "câmera": "camera",
   "câmeras": "camera",
   "camara": "camera",
   "camaras": "camera",
   "camara deportiva": "camera",
   "camaras deportivas": "camera",
   "action cam": "camera",
   "gopro": "camera",
   "filmadora": "camera",
   "filmadoras": "camera",
 
+  // áudio
+  "fone": "fone",
+  "fones": "fone",
+  "fone de ouvido": "fone",
+  "fones de ouvido": "fone",
+  "auricular": "fone",
+  "auriculares": "fone",
+  "headset": "fone",
+  "headsets": "fone",
+  "caixa de som": "speaker",
+  "caixas de som": "speaker",
+  "alto falante": "speaker",
+  "alto-falante": "speaker",
+  "alto falantes": "speaker",
+  "alto-falantes": "speaker",
+  "parlante": "speaker",
+  "parlantes": "speaker",
+  "soundbar": "soundbar",
+  "soundbars": "soundbar",
+
+  // wearables
+  "smartwatch": "smartwatch",
+  "smartwatches": "smartwatch",
+  "relogio inteligente": "smartwatch",
+  "relogios inteligentes": "smartwatch",
+  "reloj inteligente": "smartwatch",
+  "relojes inteligentes": "smartwatch",
+
+  // informática
+  "notebook": "notebook",
+  "notebooks": "notebook",
+  "laptop": "notebook",
+  "laptops": "notebook",
+  "computador": "computador",
+  "computadores": "computador",
+  "pc": "computador",
+  "pcs": "computador",
+  "monitor": "monitor",
+  "monitores": "monitor",
+  "teclado": "teclado",
+  "teclados": "teclado",
+  "mouse": "mouse",
+  "mouses": "mouse",
+  "raton": "mouse",
+  "ratones": "mouse",
+  "tablet": "tablet",
+  "tablets": "tablet",
+  "impresora": "impressora",
+  "impresoras": "impressora",
+  "impressora": "impressora",
+  "impressoras": "impressora",
+
   // tv
   "tv": "tv",
   "tvs": "tv",
   "televisao": "tv",
   "televisoes": "tv",
   "televisão": "tv",
   "televisões": "tv",
   "televisor": "tv",
   "televisores": "tv",
 
-  // notebooks
-  "notebook": "notebook",
-  "notebooks": "notebook",
-  "laptop": "notebook",
-  "laptops": "notebook",
-
   // perfumes
   "perfume": "perfume",
   "perfumes": "perfume",
   "perfumaria": "perfume",
   "perfumeria": "perfume",
 
   // cosméticos
   "cosmetico": "cosmetico",
   "cosmeticos": "cosmetico",
   "cosmético": "cosmetico",
   "cosméticos": "cosmetico",
   "cosmetica": "cosmetico",
   "cosmetica": "cosmetico",
   "cosmeticos": "cosmetico",
 
   // bebidas
   "bebida": "bebida",
   "bebidas": "bebida",
   "vino": "bebida",
   "vinos": "bebida",
   "whisky": "bebida",
   "gin": "bebida",
   "vodka": "bebida",
   "cerveja": "bebida",
   "cervejas": "bebida",
 
   // alimentos / comestibles (inclui chocolates)
   "alimento": "alimento",
   "alimentos": "alimento",
   "comestible": "alimento",
   "comestibles": "alimento",
   "chocolate": "alimento",
   "chocolates": "alimento",
   "biscoito": "alimento",
   "biscoitos": "alimento",
+  "galleta": "alimento",
+  "galletas": "alimento",
 
   // calçados / calzados
   "calcado": "calcado",
   "calçados": "calcado",
   "calçado": "calcado",
   "calzados": "calcado",
   "tenis": "calcado",
   "tênis": "calcado",
   "zapatilla": "calcado",
   "zapatillas": "calcado",
   "zapato": "calcado",
   "zapatos": "calcado",
   "bota": "calcado",
   "botas": "calcado",
 
   // esportes / deportes
   "esporte": "esporte",
   "esportes": "esporte",
   "deporte": "esporte",
   "deportes": "esporte",
+  "bicicleta": "bicicleta",
+  "bicicletas": "bicicleta",
+  "raquete": "raquete",
+  "raquetas": "raquete",
+  "raqueta": "raquete",
 
   // eletrodomésticos / electrodomesticos
   "eletrodomestico": "eletrodomestico",
   "eletrodomesticos": "eletrodomestico",
   "eletrodoméstico": "eletrodomestico",
   "eletrodomésticos": "eletrodomestico",
   "electrodomestico": "eletrodomestico",
   "electrodomesticos": "eletrodomestico",
   "airfryer": "eletrodomestico",
   "geladeira": "eletrodomestico",
   "cafeteira": "eletrodomestico",
   "aspirador": "eletrodomestico",
+  "licuadora": "eletrodomestico",
+  "batidora": "eletrodomestico",
+  "heladera": "eletrodomestico",
 
   // casa e decoração / casa y decoración
   "decoracao": "decoracao",
   "decoração": "decoracao",
   "decoracion": "decoracao",
   "casa": "decoracao",
   "hogar": "decoracao",
   "utilidades": "decoracao",
 
   // camping
   "camping": "camping",
   "acampamento": "camping",
 
   // brinquedos (comum no mix da loja)
   "brinquedo": "brinquedo",
   "brinquedos": "brinquedo",
   "juguete": "brinquedo",
   "juguetes": "brinquedo",
 
   // roupas / moda
   "roupa": "roupa",
   "roupas": "roupa",
   "moda": "roupa",
   "vestimenta": "roupa",
   "ropa": "roupa",
   "ropas": "roupa",
 
   // games / consoles
   "console": "console",
   "consoles": "console",
   "videogame": "console",
   "videogames": "console",
   "videojuego": "console",
   "videojuegos": "console",
   "acessorio": "acessorio",
   "acessorios": "acessorio",
   "accesorio": "acessorio",
   "accesorios": "acessorio",
+  "juego": "console",
+  "juegos": "console",
 };
 
+// Categorias (navegação/top-level)
+export const CATEGORY_CANON: Record<string, string> = {
+  // Eletrônicos / Electrónica
+  "eletronico": "eletronico",
+  "eletronicos": "eletronico",
+  "eletrônico": "eletronico",
+  "eletrônicos": "eletronico",
+  "electronico": "eletronico",
+  "electronicos": "eletronico",
+  "electronica": "eletronico",
+  "electronicas": "eletronico",
+
+  // Celulares
+  "celular": "celular",
+  "celulares": "celular",
+  "smartphone": "celular",
+  "smartphones": "celular",
+  "telefono": "celular",
+  "telefonos": "celular",
+
+  // Câmeras
+  "camera": "camera",
+  "cameras": "camera",
+  "camara": "camera",
+  "camaras": "camera",
+
+  // Drones
+  "drone": "drone",
+  "drones": "drone",
+
+  // TV
+  "tv": "tv",
+  "tvs": "tv",
+  "televisor": "tv",
+  "televisores": "tv",
+
+  // Informática
+  "notebook": "informatica",
+  "notebooks": "informatica",
+  "laptop": "informatica",
+  "laptops": "informatica",
+  "computador": "informatica",
+  "computadores": "informatica",
+  "pc": "informatica",
+  "pcs": "informatica",
+  "tablet": "informatica",
+  "tablets": "informatica",
+  "monitor": "informatica",
+  "monitores": "informatica",
+  "teclado": "informatica",
+  "mouse": "informatica",
+  "raton": "informatica",
+
+  // Perfumes / Cosméticos
+  "perfume": "perfumaria",
+  "perfumes": "perfumaria",
+  "perfumaria": "perfumaria",
+  "perfumeria": "perfumaria",
+  "cosmetico": "cosmetico",
+  "cosmeticos": "cosmetico",
+  "cosmetica": "cosmetico",
+  "cosmético": "cosmetico",
+  "cosméticos": "cosmetico",
+
+  // Bebidas
+  "bebida": "bebida",
+  "bebidas": "bebida",
+  "vino": "bebida",
+  "whisky": "bebida",
+  "cerveja": "bebida",
+
+  // Alimentos / Comestibles
+  "alimento": "alimento",
+  "alimentos": "alimento",
+  "comestible": "alimento",
+  "comestibles": "alimento",
+  "chocolate": "alimento",
+
+  // Calçados / Calzados
+  "calcado": "calcado",
+  "calçados": "calcado",
+  "calzado": "calcado",
+  "calzados": "calcado",
+  "zapatilla": "calcado",
+  "zapato": "calcado",
+
+  // Esportes / Deportes
+  "esporte": "esporte",
+  "esportes": "esporte",
+  "deporte": "esporte",
+  "deportes": "esporte",
+  "bicicleta": "esporte",
+  "raquete": "esporte",
+
+  // Eletrodomésticos
+  "eletrodomestico": "eletrodomestico",
+  "eletrodoméstico": "eletrodomestico",
+  "electrodomestico": "eletrodomestico",
+  "electrodomesticos": "eletrodomestico",
+
+  // Casa e Decoração
+  "casa": "decoracao",
+  "hogar": "decoracao",
+  "decoracao": "decoracao",
+  "decoracion": "decoracao",
+  "utilidades": "decoracao",
+
+  // Camping
+  "camping": "camping",
+  "acampamento": "camping",
+
+  // Brinquedos
+  "brinquedo": "brinquedo",
+  "juguete": "brinquedo",
+
+  // Moda/Roupas
+  "roupa": "roupa",
+  "moda": "roupa",
+  "ropa": "roupa",
+};
@@
 export function toSingularPTBR(word: string): string {
   const w = normPTBR(word);
   if (PRODUCT_CANON[w]) return PRODUCT_CANON[w]; // dicionário vence
   if (w.endsWith("oes")) return w.slice(0, -3) + "ao";    // televisoes -> televisao
   if (w.endsWith("oes")) return w.slice(0, -3) + "ão";    // redundância segura
   if (w.endsWith("aes")) return w.slice(0, -3) + "ao";    // paes -> pao (genérico)
   if (w.endsWith("ais")) return w.slice(0, -3) + "al";    // canais -> canal
   if (w.endsWith("eis")) return w.slice(0, -3) + "el";    // papeis -> papel
   if (w.endsWith("is"))  return w.slice(0, -1) + "l";     // funis -> funil
   if (w.endsWith("ns"))  return w.slice(0, -2) + "m";     // bons -> bom
   if (w.length > 3 && w.endsWith("s")) return w.slice(0, -1); // perfumes -> perfume
   return w;
 }
 
 export function tokenizePTBR(msg: string): string[] {
   return normPTBR(msg).split(/\s+/g);
 }
 
 export function canonicalProductFromText(msg: string): string | null {
   const toks = tokenizePTBR(msg);
   for (const t of toks) {
     const canon = PRODUCT_CANON[t] ?? PRODUCT_CANON[toSingularPTBR(t)];
     if (canon) return canon;
   }
   return null;
 }
+
+export function canonicalCategoryFromText(msg: string): string | null {
+  const toks = tokenizePTBR(msg);
+  for (const t of toks) {
+    const c = CATEGORY_CANON[t] ?? CATEGORY_CANON[toSingularPTBR(t)];
+    if (c) return c;
+  }
+  return null;
+}

2) src/nlp/intent.ts — usar produto e categoria (pt/es)
*** a/src/nlp/intent.ts
--- b/src/nlp/intent.ts
@@
-import { normPTBR, canonicalProductFromText } from "./../utils/lang-ptbr";
+import { normPTBR, canonicalProductFromText, canonicalCategoryFromText } from "./../utils/lang-ptbr";
@@
 export interface IntentResult {
   intent: Intent;
-  entities?: { product?: string; category?: string; model?: string };
+  entities?: { product?: string; category?: string; model?: string };
 }
@@
-  const canon = canonicalProductFromText(m);
-  if (canon) {
-    const isDrone = DRONE_RX.test(m) || canon === "drone";
+  const productCanon = canonicalProductFromText(m);
+  const categoryCanon = canonicalCategoryFromText(m);
+  if (productCanon || categoryCanon) {
+    const isDrone = DRONE_RX.test(m) || productCanon === "drone" || categoryCanon === "drone";
     return {
       intent: "PRODUCT_SEARCH",
       entities: {
-        category: canon === "drone" ? "drone" : canon === "iphone" || canon === "galaxy" ? "celular" : canon,
-        product: canon,
+        category: categoryCanon ?? (productCanon === "drone" ? "drone"
+                    : productCanon === "iphone" || productCanon === "galaxy" ? "celular"
+                    : productCanon ?? undefined),
+        product: productCanon ?? undefined,
       },
     };
   }

3) src/services/conversation.ts — aproveitar categoria quando houver
*** a/src/services/conversation.ts
--- b/src/services/conversation.ts
@@
-import { classifyIntent } from "../nlp/intent";
+import { classifyIntent } from "../nlp/intent";
@@
 export async function runAssistant(sessionId: string, userMsg: string): Promise<AssistantResult> {
   const intent = classifyIntent(userMsg);
@@
-  const { items } = await searchProducts(queryFinal);
+  // Sinalize categoria para seu buscador (se suportar)
+  // Ex.: const { entities } = intent; repo.products.search({ q: queryFinal, category: entities?.category })
+  const { items } = await searchProducts(queryFinal);


Se seu buscador aceitar category, passe entities?.category para melhorar relevância quando o usuário disser apenas “bebidas”, “calzados”, “cosméticos”, etc.

4) (Opcional) testes com PT/ES + plural
*** a/test/query-builder.spec.ts
--- b/test/query-builder.spec.ts
@@
-import { canonicalProductFromText } from "../src/utils/lang-ptbr";
+import { canonicalProductFromText, canonicalCategoryFromText } from "../src/utils/lang-ptbr";
@@
   test("televisões/televisores/tvs → tv", () => {
     expect(canonicalProductFromText("televisões 4k")).toBe("tv");
     expect(canonicalProductFromText("televisores 8k")).toBe("tv");
     expect(canonicalProductFromText("tvs 4k")).toBe("tv");
   });
@@
   test("comestibles/alimentos/chocolates → alimento", () => {
     expect(canonicalProductFromText("comestibles gourmet")).toBe("alimento");
     expect(canonicalProductFromText("alimentos importados")).toBe("alimento");
     expect(canonicalProductFromText("chocolates suíços")).toBe("alimento");
   });
+
+describe("categorias PT/ES", () => {
+  test("calzados/esportes/electrodomésticos", () => {
+    expect(canonicalCategoryFromText("calzados deportivos")).toBe("calcado");
+    expect(canonicalCategoryFromText("deportes outdoor")).toBe("esporte");
+    expect(canonicalCategoryFromText("electrodomesticos de cocina")).toBe("eletrodomestico");
+  });
+  test("perfumaria/cosméticos/bebidas", () => {
+    expect(canonicalCategoryFromText("perfumeria")).toBe("perfumaria");
+    expect(canonicalCategoryFromText("cosméticos faciais")).toBe("cosmetico");
+    expect(canonicalCategoryFromText("bebidas premium")).toBe("bebida");
+  });
+});

O que você ganha

“drones”, “calzados”, “televisores”, “perfumería”, “electrónicos”, “comestibles”… tudo cai na forma canônica.

A intenção de produto e/ou categoria funciona tanto em português quanto em espanhol, singular ou plural.

Se você já usa o retry singular/plural, mantém a robustez mesmo quando a fonte de dados diferencia termos.

Quer que eu inclua filtros por subcategoria (ex.: “whisky”, “gin”, “zapatillas”, “raquetas”, “soundbar”) como tags que seu buscador possa usar? Posso te entregar um SUBCATEGORY_CANON no mesmo arquivo.
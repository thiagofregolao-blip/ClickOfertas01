Entendi. O comportamento ‚Äúengessado‚Äù vem de 2 pontos t√≠picos:

√önico fluxo ‚Äúproduto‚Äù ‚Üí tudo que foge vira ‚Äún√£o achei nada‚Äù.

Sem roteador de inten√ß√£o ‚Üí perguntas como ‚Äúque horas s√£o?‚Äù ou ‚Äúvoc√™ tem drones?‚Äù (fora do cat√°logo de celulares) n√£o t√™m caminho.

Segue patch completo para:

Detectar inten√ß√£o (produto x small talk x utilit√°rio tempo x fora de dom√≠nio).

Responder educadamente quando for fora do cat√°logo, sem quebrar o contexto.

Manter o fluxo de produto quando fizer sentido (ex.: ‚Äúlinha 12‚Äù ‚Üí iPhone 12, j√° resolvido antes).

Aplique na raiz (ajuste paths se necess√°rio).

1) Classificador de inten√ß√£o (regra leve + slots)
*** /dev/null
--- a/src/nlp/intent.ts
@@
+// src/nlp/intent.ts
+import { normPTBR } from "./../utils/lang-ptbr";
+
+export type Intent =
+  | "PRODUCT_SEARCH"
+  | "SMALL_TALK"
+  | "TIME_QUERY"
+  | "OUT_OF_DOMAIN"
+  | "HELP"
+  | "UNKNOWN";
+
+export interface IntentResult {
+  intent: Intent;
+  entities?: { product?: string; category?: string; model?: string };
+}
+
+const SMALL_TALK_RX = /\b(oi|ol[a√°]|bom dia|boa tarde|boa noite|tudo bem|como vai|e ai|e a√≠)\b/;
+const HELP_RX = /\b(ajuda|como funciona|o que voc[e√™] faz|dica|sugest[a√£]o)\b/;
+const TIME_RX = /\b(que horas s[a√£]o|hor[a√°]rio|agora)\b/;
+const PRODUCT_RX = /\b(iphone|galaxy|samsung|apple|xiaomi|motorola|pixel|celular|telefone|smartphone|drone|drones|perfume|notebook|laptop|tv|televis[a√£]o)\b/;
+const DRONE_RX = /\b(drone|drones|mavic|dj[i√≠])\b/;
+
+export function classifyIntent(msg: string): IntentResult {
+  const m = normPTBR(msg);
+
+  if (m.length < 2) return { intent: "UNKNOWN" };
+  if (TIME_RX.test(m)) return { intent: "TIME_QUERY" };
+  if (SMALL_TALK_RX.test(m)) return { intent: "SMALL_TALK" };
+  if (HELP_RX.test(m)) return { intent: "HELP" };
+
+  if (PRODUCT_RX.test(m)) {
+    const isDrone = DRONE_RX.test(m);
+    return {
+      intent: "PRODUCT_SEARCH",
+      entities: {
+        category: isDrone ? "drone" : /iphone|apple/.test(m) ? "celular" : undefined,
+        product: /iphone|apple/.test(m) ? "iphone"
+               : /galaxy|samsung/.test(m) ? "galaxy"
+               : /xiaomi/.test(m) ? "xiaomi"
+               : /motorola/.test(m) ? "motorola"
+               : /pixel/.test(m) ? "pixel"
+               : isDrone ? "drone"
+               : undefined,
+      },
+    };
+  }
+
+  // Frases curtas tipo ‚Äúlinha 12‚Äù sem contexto caem em UNKNOWN.
+  return { intent: "UNKNOWN" };
+}

2) Respostas de small talk / utilit√°rios
*** /dev/null
--- a/src/services/smalltalk.ts
@@
+// src/services/smalltalk.ts
+export function replySmallTalk(): string {
+  const pool = [
+    "Oi! üëã Como posso te ajudar hoje?",
+    "Opa! Se quiser, me diz o produto que voc√™ procura (ex.: iPhone, drone, perfume).",
+    "Ol√°! Posso buscar ofertas de celulares, perfumes, eletr√¥nicos e mais. O que voc√™ quer ver?",
+  ];
+  return pool[Math.floor(Math.random() * pool.length)];
+}
+
+export function replyHelp(): string {
+  return "Me diga o produto ou categoria (ex.: iPhone 12, Galaxy 15, drone com c√¢mera). Posso filtrar por pre√ßo, marca e modelo. üòâ";
+}
+
+export function replyTime(): string {
+  const now = new Date();
+  const hh = String(now.getHours()).padStart(2, "0");
+  const mm = String(now.getMinutes()).padStart(2, "0");
+  return `Agora s√£o ${hh}:${mm} ‚è∞`;
+}
+
+export function replyOutOfDomain(exemplo?: string): string {
+  return `Ainda n√£o consigo ajudar com isso. ${exemplo ?? "Me diz um produto (ex.: iPhone, drone, perfume) que eu busco pra voc√™ üòä"}`;
+}

3) Ajuste do builder para ficar dispon√≠vel

(se j√° aplicou antes, mantenha; s√≥ confirmando os exports)

*** a/src/nlp/query-builder.ts
--- b/src/nlp/query-builder.ts
@@
 export function montarConsulta(userMsg: string, focoAnterior?: string | null): string {
@@
 }
 
 export function detectarFoco(userMsg: string): string | null {
@@
 }
+export const PRODUTOS_RX = /\b(iphone|apple|galaxy|samsung|xiaomi|motorola|pixel)\b/i;
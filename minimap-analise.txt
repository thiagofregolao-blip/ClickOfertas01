======================================
C√ìDIGO COMPLETO DO COMPONENTE MINIMAP
======================================

ARQUIVO: client/src/components/MiniMap.tsx

import { useEffect, useState } from 'react';
import { MapContainer, TileLayer, Marker } from 'react-leaflet';
import { MapPin } from 'lucide-react';
import L from 'leaflet';

// Fix for default marker icons in React Leaflet
delete (L.Icon.Default.prototype as any)._getIconUrl;
L.Icon.Default.mergeOptions({
  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png',
  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png',
  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png',
});

interface MiniMapProps {
  latitude: number | string;
  longitude: number | string;
  storeName?: string;
  onClick?: () => void;
  className?: string;
  size?: 'small' | 'medium' | 'large' | 'custom';
}

export function MiniMap({ 
  latitude, 
  longitude, 
  storeName = 'Loja', 
  onClick,
  className = '',
  size = 'medium'
}: MiniMapProps) {
  const [hasValidCoordinates, setHasValidCoordinates] = useState(false);
  const [mapKey, setMapKey] = useState(0);

  // Parse and validate coordinates
  const lat = typeof latitude === 'string' ? parseFloat(latitude) : latitude;
  const lng = typeof longitude === 'string' ? parseFloat(longitude) : longitude;

  useEffect(() => {
    const isValidLat = lat !== null && lat !== undefined && !isNaN(lat) && lat >= -90 && lat <= 90;
    const isValidLng = lng !== null && lng !== undefined && !isNaN(lng) && lng >= -180 && lng <= 180;
    setHasValidCoordinates(Boolean(isValidLat && isValidLng));
    
    // Force map re-render when coordinates change
    setMapKey(prev => prev + 1);
  }, [lat, lng]);

  const handleClick = () => {
    if (onClick && hasValidCoordinates) {
      onClick();
    }
  };

  // Get default size classes if not using custom
  const getSizeClasses = () => {
    if (size === 'custom') return '';
    const sizeMap = {
      small: 'w-12 h-8 sm:w-14 sm:h-10',
      medium: 'w-16 h-10 sm:w-20 sm:h-12',
      large: 'w-24 h-16 sm:w-28 sm:h-20'
    };
    return sizeMap[size] || sizeMap.medium;
  };

  if (!hasValidCoordinates) {
    return (
      <div 
        className={`
          ${getSizeClasses()}
          rounded-lg 
          bg-gray-100 dark:bg-gray-800 
          border border-gray-200 dark:border-gray-700
          shadow-sm
          flex items-center justify-center
          transition-all duration-200
          ${onClick ? 'cursor-pointer hover:shadow-md hover:bg-gray-50 dark:hover:bg-gray-750' : ''}
          ${className}
        `}
        onClick={handleClick}
        title={hasValidCoordinates ? "Ver no mapa" : "Localiza√ß√£o n√£o dispon√≠vel"}
        data-testid="minimap-placeholder"
      >
        <MapPin className="h-4 w-4 text-gray-400" />
      </div>
    );
  }

  return (
    <div 
      className={`
        relative
        ${getSizeClasses()}
        rounded-lg 
        overflow-hidden 
        border border-gray-200 dark:border-gray-700
        shadow-sm
        transition-all duration-200
        ${onClick ? 'cursor-pointer hover:shadow-md' : ''}
        ${className}
      `}
      onClick={handleClick}
      title={onClick ? "Ver no mapa" : storeName}
      data-testid="minimap-container"
    >
      <MapContainer
        key={mapKey}
        center={[lat!, lng!]}
        zoom={14}
        style={{ height: '100%', width: '100%' }}
        className="minimap-leaflet"
        zoomControl={false}
        scrollWheelZoom={false}
        doubleClickZoom={false}
        touchZoom={false}
        boxZoom={false}
        keyboard={false}
        dragging={false}
        attributionControl={false}
        data-testid="minimap-leaflet-container"
      >
        <TileLayer
          url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
          attribution=""
        />
        <Marker 
          position={[lat!, lng!]} 
          data-testid="minimap-marker"
        />
      </MapContainer>
      
      {/* Clickable overlay for the entire map */}
      {onClick && (
        <div 
          className="absolute inset-0 bg-blue-600/20 hover:bg-blue-600/30 transition-all cursor-pointer flex items-center justify-center"
          onClick={handleClick}
          title="Clique para ver no mapa"
          data-testid="minimap-clickable-overlay"
        >
          <div className="bg-blue-600 hover:bg-blue-700 text-white text-xs font-medium px-2 py-1 rounded shadow-lg transition-all">
            üìç Ver mapa
          </div>
        </div>
      )}
    </div>
  );
}

======================================
COMO √â USADO NO PUBLIC-FLYER.TSX
======================================

{/* MiniMap - Posicionado na √°rea branca √† direita */}
{store.latitude && store.longitude && (
  <div className="flex-shrink-0">
    <div className="bg-white border-2 border-gray-300 rounded-md p-1 shadow-sm relative overflow-hidden">
      <MiniMap
        latitude={store.latitude}
        longitude={store.longitude}
        storeName={store.name}
        onClick={() => setIsMapModalOpen(true)}
        size="custom"
        className="w-44 h-28 border-0 rounded shadow-none cursor-pointer hover:shadow-md transition-shadow"
      />
    </div>
  </div>
)}

======================================
PROBLEMA REPORTADO
======================================

- O mapa est√° sobrepondo o header quando a p√°gina rola
- O overlay absoluto (absolute inset-0) est√° "escapando" do container
- Mesmo com relative overflow-hidden no container pai, o problema persiste

======================================
MUDAN√áAS FEITAS PARA TENTAR RESOLVER
======================================

1. Reduzi z-index de z-[1000] para z-10
2. Removi hover:scale-105 para evitar crescimento
3. Adicionei pointer-events-none/auto
4. Adicionei relative overflow-hidden no container pai
5. Mudei abordagem: overlay transparente em vez de bot√£o grande

======================================
ESTRUTURA CSS ATUAL
======================================

Container pai: relative overflow-hidden
‚Ü≥ MiniMap container: relative + overflow-hidden + transition-all
  ‚Ü≥ MapContainer: Leaflet map com 100% height/width
  ‚Ü≥ Overlay: absolute inset-0 com bg-blue-600/20
    ‚Ü≥ Bot√£o pequeno: "üìç Ver mapa"

PROBLEMA PODE ESTAR EM:
- Leaflet CSS sobrescrevendo containment
- Transform contexts criados pelo Leaflet
- Scroll context affecting absolute positioning
- CSS stacking contexts n√£o funcionando como esperado